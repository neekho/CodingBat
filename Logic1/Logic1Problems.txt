1. public boolean cigarParty(int cigars, boolean isWeekend) ->

    When squirrels get together for a party, they like to have cigars. 
    A squirrel party is successful when the number of cigars is between 40 and 60, inclusive. 
    Unless it is the weekend, in which case there is no upper bound on the number of cigars.
    Return true if the party with the given values is successful, or false otherwise.


        cigarParty(30, false) → false
        cigarParty(50, false) → true
        cigarParty(70, true) → true








        


3. public boolean love6(int a, int b) -> 
    The number 6 is a truly great number. Given two int values, a and b, 
    return true if either one is 6. Or if their sum or difference is 6. 
    Note: the function Math.abs(num) computes the absolute value of a number.


        love6(6, 4) → true
        love6(4, 5) → false
        love6(1, 5) → true




// 2nd Column

2. public int sortaSum(int a, int b) ->

    Given 2 ints, a and b, return their sum. However, sums in the range 10..19 inclusive, are forbidden, so in that case just return 20.


        sortaSum(3, 4) → 7
        sortaSum(9, 4) → 20
        sortaSum(10, 11) → 21

3. public boolean in1To10(int n, boolean outsideMode) ->

    Given a number n, return true if n is in the range 1..10, inclusive. 
    Unless outsideMode is true, in which case return true if the number is less or equal to 1, or greater or equal to 10.


        in1To10(5, false) → true
        in1To10(11, false) → false
        in1To10(11, true) → true

4. public boolean old35(int n) ->

    Return true if the given non-negative number is a multiple of 3 or 5, but not both.
    Use the % "mod" operator -- see Introduction to Mod

        old35(3) → true
        old35(10) → true
        old35(15) → false


5. public int teenSum(int a, int b) ->

    Given 2 ints, a and b, return their sum. However, "teen" values in the range 13..19 inclusive, are extra lucky. 
    So if either value is a teen, just return 19.


        teenSum(3, 4) → 7
        teenSum(10, 13) → 19
        teenSum(13, 2) → 19


6. public String fizzString(String str) ->

    Given a string str, if the string starts with "f" return "Fizz". 
    If the string ends with "b" return "Buzz". If both the "f" and "b" conditions are true, 
    return "FizzBuzz". In all other cases, return the string unchanged. (See also: FizzBuzz Code)


    fizzString("fig") → "Fizz"
    fizzString("dib") → "Buzz"
    fizzString("fib") → "FizzBuzz"


7. public boolean inOrder(int a, int b, int c, boolean bOk) ->
    Given three ints, a b c, return true if b is greater than a, and c is greater than b. 
    However, with the exception that if "bOk" is true, b does not need to be greater than a.

        inOrder(1, 2, 4, false) → true
        inOrder(1, 2, 1, false) → false
        inOrder(1, 1, 2, true) → true

    